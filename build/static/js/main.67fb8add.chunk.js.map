{"version":3,"sources":["transitions/slideTransition.module.css","components/App/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","transitions/slideTitle.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","onAddContact","props","reset","this","className","styles","form","onSubmit","labelItem","htmlFor","textName","inputName","type","onChange","id","submitBtn","Component","Filter","onChangeFilter","filterInput","placeholder","ContactItem","contact","onDeleteContact","contactInfo","onClick","deleteBtn","ContactsList","contacts","TransitionGroup","component","contactList","map","CSSTransition","key","timeout","classNames","slideTransition","unmountOnExit","contactItem","App","filter","handleAddContact","find","item","toLowerCase","NotificationManager","error","checkInputValid","isNumber","Number","addContactToState","contactToAdd","prevState","filterContacts","includes","handleDeleteContact","handleChangeFilter","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","container","in","slideTitleTransition","appear","sectionTitle","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.67fb8add.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTransition_enter__1wzzZ\",\"enterActive\":\"slideTransition_enterActive__2BTZm\",\"exit\":\"slideTransition_exit__3qHRE\",\"exitActive\":\"slideTransition_exitActive__2PlbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ExMa\",\"sectionTitle\":\"App_sectionTitle__SSaPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1EKiS\",\"labelItem\":\"ContactForm_labelItem__1S07Z\",\"textName\":\"ContactForm_textName__1dboj\",\"submitBtn\":\"ContactForm_submitBtn__k50Co\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__yMoJi\",\"contactItem\":\"ContactsList_contactItem__12Vb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInfo\":\"ContactItem_contactInfo__3oLyd\",\"deleteBtn\":\"ContactItem_deleteBtn__6KIaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3W5a5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"slideTitle_appear__2S7fW\",\"appearActive\":\"slideTitle_appearActive__19__U\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onAddContact } = this.props;\r\n    onAddContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.labelItem} htmlFor={this.nameInputId}>\r\n          <p className={styles.textName}>Name</p>\r\n          <input\r\n            className={styles.inputName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label className={styles.labelItem} htmlFor={this.numberInputId}>\r\n          <p className={styles.textName}>Number</p>\r\n          <input\r\n            type=\"phone\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button className={styles.submitBtn} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <input\r\n    type=\"text\"\r\n    value={value}\r\n    onChange={onChangeFilter}\r\n    className={styles.filterInput}\r\n    placeholder=\"Type name to filter contacts...\"\r\n  ></input>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  const { name, number } = contact;\r\n\r\n  return (\r\n    <>\r\n      <p className={styles.contactInfo}>\r\n        {name} : {number}\r\n      </p>\r\n      <button\r\n        onClick={() => onDeleteContact(contact.id)}\r\n        className={styles.deleteBtn}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styles from './ContactsList.module.css';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport slideTransition from '../../transitions/slideTransition.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <li className={styles.contactItem}>\r\n            <ContactItem contact={contact} onDeleteContact={onDeleteContact} />\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n// import SectionTitle from '../SectionTitle/SectionTitle';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactsList from '../ContactsList/ContactsList';\r\nimport styles from './App.module.css';\r\nimport slideTitleTransition from '../../transitions/slideTitle.module.css';\r\nimport slideTransition from '../../transitions/slideTransition.module.css';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem('contacts');\r\n    if (persistedContacts) {\r\n      const contacts = JSON.parse(persistedContacts);\r\n      this.setState({ ...contacts });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleAddContact = contact => {\r\n    const { contacts } = this.state;\r\n    if (\r\n      contacts.find(\r\n        item => item.name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      NotificationManager.error(\r\n        'Please, enter another name',\r\n        `${contact.name} is already in contacts`,\r\n        5000,\r\n      );\r\n    } else {\r\n      this.checkInputValid(contact);\r\n    }\r\n  };\r\n\r\n  checkInputValid = contact => {\r\n    const { number, name } = contact;\r\n    const isNumber = Number(number);\r\n    if (isNumber && name !== '') {\r\n      this.addContactToState(contact);\r\n    } else if (!isNumber && name === '') {\r\n      NotificationManager.error(\r\n        'Please, enter name or number',\r\n        `Some registration point are empty`,\r\n        5000,\r\n      );\r\n    } else if (!isNumber) {\r\n      NotificationManager.error(\r\n        'Please, enter a correct number',\r\n        'Number is not valid',\r\n        5000,\r\n      );\r\n    } else if (name === '') {\r\n      NotificationManager.error('Please, enter a name', 'Name is empty', 5000);\r\n    }\r\n  };\r\n\r\n  addContactToState = contact => {\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: shortid.generate(),\r\n    };\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contactToAdd],\r\n    }));\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  handleDeleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleChangeFilter = e => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <CSSTransition\r\n          in\r\n          timeout={500}\r\n          classNames={slideTitleTransition}\r\n          appear\r\n        >\r\n          <h2 className={styles.sectionTitle}>Phonebook</h2>\r\n        </CSSTransition>\r\n        <ContactForm onAddContact={this.handleAddContact} />\r\n        <NotificationContainer />\r\n        <h2 className={styles.sectionTitle}>Contacts</h2>\r\n        <CSSTransition\r\n          in={contacts.length > 1}\r\n          timeout={250}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\r\n        </CSSTransition>\r\n        <ContactsList\r\n          onDeleteContact={this.handleDeleteContact}\r\n          contacts={this.filterContacts()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}